; ACME 0.96.4
;
; GROUiK / [FRENCH TOUCH]
; 06/2020
;
; v0.4
;
!cpu 6502
!sl "lbl_shadow.txt"


    *= $60 	; ORG = $60

; =============================================================================
BASE_Y = 7	; + 1 (carry)
; =============================================================================
offsetGR		= $26	; +27
; =============================================================================
START
!zone
		; init screens
		JSR $F3E2			; HGR/Erase screen [ROM]
		JSR $FB40			; LORES/Erase Screen [ROM]
		
		; [c = 1 here]

		; display "SHADOW" text
loopY		
modY		LDA #06			
		ADC #BASE_Y		; [c = 1 always because of the CMP #$FF below]
		JSR $F847			; set "offsetGR" (in $26/27) from Y value (in A) [ROM]

		LDA #$55			; gray color
		LDY #35			; x pos
loopX		
		LDX #7
loop1byte
moddata		LSR+1 DATATEXT+27		; force zp (ACME) 
		BCC +
		STA (offsetGR),Y
+ 		DEY
		DEX
		BPL loop1byte
		DEC moddata+1
		CPY #03			
		BNE loopX
		DEC modY+1
		BPL loopY
		
		; desynch screen
		; c = 1 here
		LDY #00
mainloop
		LDX #255
loop1		
		STA $C056
modvar1		BVC +		; BVC xx
		NOP		; 0
		NOP		; 1
		NOP		; 2
+		NOP		; 3
		ASL $C057
		BVC +		
+		LDA ($AC,X)	
		STA $C030
		DEX
		BNE loop1
		DEY
		BNE mainloop
		DEC modvar1+1
		BPL mainloop

		; end part
		; Y = 0 here
		
		LDX #80	
loope	
-		LDA $C019
		BPL -
		LDA $C056,Y
		LDA #68
		JSR $FCA8			; WAIT routine => (26+27*68+5*68^2)/2 cycles [ROM]
		TYA
		EOR #01
		TAY
		STA $C030
		DEX
		BNE loope

end		BEQ end
; =============================================================================
;                           SSSS HH  HH AAAA   DDDD OOO  O WWWWW    
DATATEXT		!byte %01111010,%01011110,%00010111,%10100010	
		!byte %01001010,%01010010,%00010100,%10100010
		!byte %01000010,%01010010,%00010100,%10100010
		!byte %01111011,%11011110,%11110100,%10101010
		!byte %00001010,%01010010,%10010100,%10101010
		!byte %01001010,%01010010,%10010100,%10101010
		!byte %01111010,%01010010,%11110111,%10111110
; =================================,%========,%========,%============================
SiZE = * - START
!if (SiZE >$80) {!warn "Too large guy, try again!"} else {!warn SiZE}